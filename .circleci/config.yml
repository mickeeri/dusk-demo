# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1-browsers
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mysql:5.7

    environment:
      - APP_KEY: "base64:goQzQsFS/ayFxrSET6o9O/mNL1bblRt3BpMjOPHcQ68="

    working_directory: ~/repo

    steps:
      - checkout

      - run:
         name: Download NodeJS v8
         command: curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -

      - run:
         name: Install NodeJS
         command: sudo apt-get install nodejs

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}

          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Install NodeJS Packages
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      # - run: ./vendor/bin/phpunit

      # - run: sudo apt-get install -y libsqlite3-dev
      - run: cp .env.testing .env
      # - run: composer install -n --ignore-platform-reqs
      - run: yarn run prod
      - run: vendor/bin/phpunit

      - run:
         name: Start Chrome Driver
         command: ./vendor/laravel/dusk/bin/chromedriver-linux
         background: true

      - run:
         name: Run Laravel Server
         command: php artisan serve
         background: true

      - run:
         name: Run Laravel Dusk Tests
         command: php artisan dusk
